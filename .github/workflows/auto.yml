name: Upload APK

on:
  push:
    branches:
      - main
    paths:
      - '**/任务_v*.apk'

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Get APK files
        run: |          
          apk_files=$(find . -name "*任务_v*.apk" -exec stat -c '%Y %n' {} \; | sort -rn | head -1 | cut -d' ' -f2-)
          echo "APK_FILES=$apk_files" >> $GITHUB_ENV

      - name: Extract version from APK file name
        run: |
          # 提取版本号
          version=$(echo ${{ env.APK_FILES }} | sed 's/.*v\(.*\).apk/\1/')
          echo "VERSION=$version" >> $GITHUB_ENV

      # - name: Wait for v7 file
      #   run: |
      #     while true
      #     do
      #       # 根据版本号和v7查找文件
      #       new_apk_files=$(find . -name "*v7*${{ env.VERSION }}*.apk")
      #       if [ -n "$new_apk_files" ]; then
      #         echo "NEW_APK_FILES=$new_apk_files" >> $GITHUB_ENV
      #         break
      #       fi
      #       echo "Waiting for v7 APK with version ${VERSION}..."
      #       sleep 10
      #     done
      
      - name: Delete old APK files
        run: |
          old_apk_files=$(find . -name "*.apk" -not -name "*任务_v${{ env.VERSION }}*")
          if [ -n "$old_apk_files" ]; then
            rm -f $old_apk_files
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add .
            git commit -m "Delete old APK files"
            git push origin main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      
      - name: Publish APK Releases
        uses: softprops/action-gh-release@v2
        env:
          RELEASE_NAME: 'My App Release'
          RELEASE_DESCRIPTION: 'Automated APK release'
          DRAFT: false
          PRERELEASE: false
        with:
          tag_name: ${{ env.VERSION }}
          files: |
            ${{ env.APK_FILES }} 
            # ${{ env.NEW_APK_FILES }}
